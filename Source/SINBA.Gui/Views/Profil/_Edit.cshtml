@model Profil

@{
    Html.EnableClientValidation();
}

@using (Html.BeginForm(Model.Id < 0 ? SinbaConstants.Actions.Add : SinbaConstants.Actions.Edit, SinbaConstants.Controllers.Profil, FormMethod.Post, new { @class = CssClasses.EditForm }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.Id)

    @Html.DevExpress().FormLayout(settings =>
    {
        settings.Name = "profilFormLayout";

        // Nom
        settings.Items.Add(m => m.Nom, textBox => ViewHelper.FormLayoutTextBoxSettings(textBox,
            focus: true,
            maxLength: SinbaConstants.NumericValues.Length.ProfilNomMax));
        
        // Boutons Enregistrer/Annuler
        settings.Items.Add(item =>
        {
            item.Caption = string.Empty;
            item.SetNestedContent(() =>
            {
                ViewContext.Writer.Write(CssClasses.TwoButtonsAlign,
                Html.DevExpress().Button(btnSettings => ViewHelper.SubmitButtonSettings(btnSettings,
                    text: Model.Id < 0 ? CommonResource.btnSave : CommonResource.btnUpdate)).GetHtml(),
                Html.DevExpress().Button(btnSettings => ViewHelper.CancelButtonSettings(btnSettings,
                    text: CommonResource.btnCancel,
                    controller: SinbaConstants.Controllers.Profil,
                    action: SinbaConstants.Actions.Index)).GetHtml());
            });
        });

    }).GetHtml()
}
