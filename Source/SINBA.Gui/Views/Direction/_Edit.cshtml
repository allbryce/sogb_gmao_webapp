@model Sinba.BusinessModel.Entity.Direction



@{

    Html.EnableClientValidation();

}



@using (Html.BeginForm(ViewBag.AddMode ? SinbaConstants.Actions.Add : SinbaConstants.Actions.Edit, SinbaConstants.Controllers.Direction, FormMethod.Post, new { @class = CssClasses.EditForm }))

{

    @Html.AntiForgeryToken()



    @Html.AntiForgeryToken()



   // @Html.HiddenFor(m => m.Id)

    //@Html.HiddenFor(m => m.IdSociete)

    ;



    @Html.DevExpress().FormLayout(settings =>

{

    settings.Name = "directionFormLayout";


    // Code
    if (ViewBag.AddMode == false)
    {
        settings.Items.Add(m => m.DirectionId, textBox => ViewHelper.FormLayoutTextBoxSettings(textBox,

       maxLength: SinbaConstants.NumericValues.Length.LibelleMax));

    }

    // Libelle

    settings.Items.Add(m => m.LibelleDirection, textBox => ViewHelper.FormLayoutTextBoxSettings(textBox,

        maxLength: SinbaConstants.NumericValues.Length.LibelleMax));



    // Boutons Enregistrer/Annuler

    settings.Items.Add(item =>

    {

        item.Caption = string.Empty;

        item.SetNestedContent(() =>

        {

            ViewContext.Writer.Write(CssClasses.TwoButtonsAlign,

                Html.DevExpress().Button(btnSettings => ViewHelper.SubmitButtonSettings(btnSettings,

                    name: "btnValider",

                    text: ViewBag.AddMode ? CommonResource.btnSave : CommonResource.btnUpdate)).GetHtml(),

                Html.DevExpress().Button(btnSettings => ViewHelper.CancelButtonSettings(btnSettings,

                    text: CommonResource.btnCancel,

                    controller: SinbaConstants.Controllers.Direction,

                    action: SinbaConstants.Actions.Index)).GetHtml());

        });

    });



}).GetHtml()

}