@Html.DevExpress().GridView(settings =>
{
    ViewHelper.GridViewDefaultSettings(settings, "gridAssociation",
    allowDragDrop: false,
    allowSortResize: false,
    showFilter: false,
    enablePaging: false,
    gridViewEditingMode: GridViewEditingMode.Batch);
    settings.KeyFieldName = DbColumns.MaterielId;
    settings.CallbackRouteValues = new { Controller = SinbaConstants.Controllers.Materiel, Action = SinbaConstants.Actions.AssocierMaterielPartial };
    settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowDeleteButton = true;
    settings.CommandColumn.Width = Unit.Pixel(100);
    // Pagination

    // Buttons column: Add, Edit, Delete
    //settings.Columns.Add(column =>
    //{
    //    column.Width = Unit.Pixel(45);
    //    column.Caption = Strings.NumberSign;

    //    column.SetHeaderTemplateContent(c =>
    //    {
    //        ViewContext.Writer.Write(
    //        // Button Add (column header)
    //        Html.Label(Strings.EmptyLink, null, new { @class = CssClasses.PlusIcon, title = CommonResource.btnAddTooltip, onclick = "openMaterielAddModal()" }).ToHtmlString()
    //        );
    //    });
    //    column.Settings.AllowDragDrop = DefaultBoolean.False;
    //    column.Settings.AllowSort = DefaultBoolean.False;
    //    column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    //});


    //Code
    settings.Columns.Add(column =>
    {
        column.FieldName = "MaterielId";
        column.Caption = "Id du Materiel ";
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Width = Unit.Pixel(30);
        column.ReadOnly = true;
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "MaterielAssocieId";
        c.Caption = "Materiel Associé ";
        c.EditorProperties().ComboBox(p =>
        {
            p.TextField = "LibelleMateriel";
            p.ValueField = "MaterielId";
            p.ValueType = typeof(long);
            p.DataSource = ViewBag.AssocierMateriel;
        });
        c.Width = 250;
        c.ReadOnly = false;
    });

    settings.Columns.Add(column =>
    {
        ViewHelper.GridViewDateColumn(column, fieldName: "DateInstallation", caption: "Date d'installation", dateTimeFormat: SinbaDateTimeFormat.Date);
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Width = Unit.Pixel(100);
    });
    settings.Columns.Add(column =>
    {
        ViewHelper.GridViewDateColumn(column, fieldName: "DateRetrait", caption: "Date de retrait", dateTimeFormat: SinbaDateTimeFormat.Date);
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Width = Unit.Pixel(100);
    });

    // Keeping grid state
    settings.ClientLayout = (s, e) =>
    {
        if (e.LayoutMode == ClientLayoutMode.Loading)
        {
            if (Session[Strings.Acces] != null)
                e.LayoutData = (string)Session[Strings.GridStateMateriel];
        }
        else
            Session[Strings.GridStateMateriel] = e.LayoutData;
    };
}).Bind(Model).GetHtml()
