@model Materiel
@{
    Html.EnableClientValidation(false);
}
@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "MaterielModal";
        settings.Width = 1000;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = AnimationType.None;
        settings.HeaderText = "Matériel";
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;

        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SetContent(() =>
        {
            using (Html.BeginForm("Add", "Materiel", FormMethod.Post, new { id = "Materiel", @class = "edit_form" })){
                Html.Hidden("ProductID");

                @Html.DevExpress().FormLayout(setting => {
                    setting.Name = "ModalModeFormLayout";
                    setting.RequiredMarkDisplayMode = RequiredMarkMode.None;
                    setting.Width = Unit.Percentage(100);
                    setting.Height = Unit.Percentage(100);
                    setting.ColumnCount = 4;

                    setting.NestedExtensionWidth = Unit.Percentage(100);



                    //Code
                    //     if (ViewBag.AddMode == true)
                    //  {
                    setting.Items.Add(m => m.MaterielId, textBox => ViewHelper.FormLayoutTextBoxSettings(textBox,

                    maxLength: SinbaConstants.NumericValues.Length.LibelleMax));
                    // }

                    //Numero de série

                    setting.Items.Add(m => m.NumeroSerie, textBox => ViewHelper.FormLayoutTextBoxSettings(textBox,
                        maxLength: SinbaConstants.NumericValues.Length.LibelleMax));

                    //Libelle

                    setting.Items.Add(m => m.LibelleMateriel, textBox => ViewHelper.FormLayoutTextBoxSettings(textBox,
                        maxLength: SinbaConstants.NumericValues.Length.LibelleMax));


                    // Libelle domaine

                    setting.Items.Add(m => m.DomaineId, comboBox => ViewHelper.FormLayoutComboBoxSettings(comboBox,

                        valueType: typeof(string),
                        caption: "Domaine",
                        valueField: "DomaineId",
                        textField: "DomaineId",
                        displayColumns: new string[] { "DomaineId", "LibelleDomaine" }
                        , dataSource: ViewBag.Domaine));

                    //Libelle fournisseur


                    setting.Items.Add(m => m.FournisseurId, comboBox => ViewHelper.FormLayoutComboBoxSettings(comboBox,

                        valueType: typeof(string),
                        caption: "Fournisseur",
                        valueField: "FournisseurId",
                        textField: "FournisseurId",
                        displayColumns: new string[] { "FournisseurId", "NomFournisseur" }
                        , dataSource: ViewBag.Fournisseur));


                    //Libelle model


                    setting.Items.Add(m => m.NumeroModel, comboBox => ViewHelper.FormLayoutComboBoxSettings(comboBox,

                        valueType: typeof(string),
                        caption: "Model",
                        valueField: "NumeroModel",
                        textField: "NumeroModel",
                        displayColumns: new string[] { "NumeroModel", "LibelleModel" }
                        , dataSource: ViewBag.Model));


                    // dataSource: ViewBag.Model }));

                    // Sous Famille

                    setting.Items.Add(m => m.SousFamilleId, comboBox => ViewHelper.FormLayoutComboBoxSettings(comboBox,
                        valueType: typeof(string),
                        caption: "Sous Famille",
                        valueField: "SousFamilleId",
                        textField: "SousFamilleId",
                        displayColumns: new string[] { "SousFamilleId", "LibelleSousFamille" }
                        , dataSource: ViewBag.SousFamille));


                    //Numero du bon de commande

                    setting.Items.Add(m => m.NumeroBonCommande, textBox => ViewHelper.FormLayoutTextBoxSettings(textBox,
                        maxLength: SinbaConstants.NumericValues.Length.LibelleMax));

                    //Classe materiel

                    setting.Items.Add(m => m.ClasseMaterielId, comboBox => ViewHelper.FormLayoutComboBoxSettings(comboBox,
                        valueType: typeof(string),
                        caption: "Classe du materiel",
                        valueField: "ClasseMaterielId",
                        textField: "ClasseMaterielId",
                        displayColumns: new string[] { "ClasseMaterielId", "LibelleClasse" }
                        , dataSource: ViewBag.Classemateriel));

                    // dataSource: ViewBag.Model }));

                    //Libelle type materiel

                    setting.Items.Add(m => m.TypeMaterielId, comboBox => ViewHelper.FormLayoutComboBoxSettings(comboBox,
                        valueType: typeof(string),
                        caption: "Type du materiel",
                        valueField: "TypeMaterielId",
                        textField: "TypeMaterielId",
                        displayColumns: new string[] { "TypeMaterielId", "LibelleTypeMateriel" }
                        , dataSource: ViewBag.TypeMateriel));


                    //Date D'acquisition

                    setting.Items.Add(m => m.DateAcquisition, textBox => ViewHelper.FormLayoutDateEditSettings(textBox));

                    //Date De mise en service

                    setting.Items.Add(m => m.DateMiseEnService, textBox => ViewHelper.FormLayoutDateEditSettings(textBox));

                    //Date De sortie

                    setting.Items.Add(m => m.DateSortie, textBox => ViewHelper.FormLayoutDateEditSettings(textBox));

                    //Prix d'achat

                    setting.Items.Add(m => m.PrixAchat, textBox => ViewHelper.FormLayoutNumericTextBoxSettings(textBox,
                        maxLength: SinbaConstants.NumericValues.Length.LibelleMax));



                    //Groupe inventaire

                    setting.Items.Add(m => m.GroupeInventaireId, comboBox => ViewHelper.FormLayoutComboBoxSettings(comboBox,
                        valueType: typeof(string),
                        caption: "GroupeInventaire",
                        valueField: "GroupeInventaireId",
                        textField: "GroupeInventaireId",
                        displayColumns: new string[] { "GroupeInventaireId", "LibelleGroupeInventaire" }
                        , dataSource: ViewBag.GroupeInventaire));


                    // Observation

                    setting.Items.Add(m => m.Note, textBox => ViewHelper.FormLayoutTextBoxSettings(textBox,
                        maxLength: 200));

                    // Boutons Enregistrer/Annuler

                    setting.Items.Add(i => {
                        i.ShowCaption = DefaultBoolean.False;
                        i.SetNestedContent(() => {
                            Html.DevExpress().Button(
                                buttonSettings => {
                                    buttonSettings.Name = "btnUpdate";
                                    buttonSettings.ControlStyle.CssClass = "button";
                                    buttonSettings.Width = 80;
                                    buttonSettings.Text = "OK";
                                    buttonSettings.UseSubmitBehavior = true;


                                }
                            ).Render();
                            Html.DevExpress().Button(
                                buttonSettings => {
                                    buttonSettings.Name = "btnCancel";
                                    buttonSettings.ControlStyle.CssClass = "button";
                                    buttonSettings.Width = 80;
                                    buttonSettings.Text = "Cancel";
                                    buttonSettings.ClientSideEvents.Click = "function(s, e){ MaterielModal.Hide(); }";
                                }
                            ).Render();
                        });
                    });
                }).Render();
            }
        });

    }).GetHtml()



